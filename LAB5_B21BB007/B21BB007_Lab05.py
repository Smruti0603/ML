# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18uzH1_e0gqOfo0lGdwNIIbVtW1NcWMQU
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from collections import Counter
from sklearn.metrics import accuracy_score
from sklearn.tree import DecisionTreeClassifier
from pandas.plotting import scatter_matrix

data = pd.read_csv("penguins.csv")

data

df_data = data.dropna(axis=0)

df_data.hist( bins=50, figsize=(10, 10))

scatter_matrix( df_data, figsize=(20,12))

df_data.info()

from sklearn.preprocessing import OneHotEncoder
ohe = OneHotEncoder(drop = "first" , sparse = False)
x = ohe.fit_transform(df_data[["Sex" , "Species" , "Region" , "Island"]])

x

dict1 = {
    'Species': x[:, 1],
    'Region': x[:, 2],
    'Island': x[:, 3],
     'Culmen Length (mm)' : df_data.iloc[:,3],
     'Culmen Depth (mm)' : df_data.iloc[:,4],
     'Flipper Length (mm)' : df_data.iloc[:,5],
     'Body Mass (g)' : df_data.iloc[:,6],
    'Sex': x[:, 0]
}

new_data = pd.DataFrame.from_dict(dict1)
new_data

x1 = new_data.iloc[: , 3:7].values
y = new_data["Sex"].values

x1

from sklearn.model_selection import train_test_split



x_main ,x_test , y_main , y_test  = train_test_split( x1 , y , test_size = 0.2 )

x_train , x_val , y_train , y_val = train_test_split(x_main , y_main , test_size = 0.1 )

tree_clf= DecisionTreeClassifier(criterion='entropy', max_depth= 8, min_samples_leaf= 2)
tree_clf.fit( x_train, y_train)

y_pred= tree_clf.predict( x_val)

from sklearn.metrics import accuracy_score
print( accuracy_score( y_pred, y_val))

from sklearn import tree
import matplotlib.pyplot as plt


fn=['Culmen Length (mm)',
    'Culmen Depth (mm)',
    'Flipper Length (mm)',
    'Body Mass (g)']

cn=['Adelie Penguin (Pygoscelis adeliae)',
    'Gentoo penguin (Pygoscelis papua)',
    'Chinstrap penguin (Pygoscelis antarctica)']
fig, axes = plt.subplots(nrows = 1,ncols = 1,figsize = (30,10), dpi=300)
tree.plot_tree(tree_clf,
               feature_names = fn, 
               class_names=cn,
               filled = True);
fig.savefig('penguin_tree.png')